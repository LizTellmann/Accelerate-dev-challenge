{%- comment -%}
 id: string
 settings: section.settings / block.settings
{%- endcomment -%}

{%- if settings and id and selector -%}
  {%- capture styles -%}
    {%- liquid
      assign _font_family = 'typography_' | append: id | append: '_font_family'
      assign _size_weight_height = 'typography_' | append: id | append: '_size_weight_height'
      assign _spacing_transform_style = 'typography_' | append: id | append: '_spacing_transform_style'
      assign _padding = 'typography_' | append: id | append: '_padding'
      assign _border = 'typography_' | append: id | append: '_border'
      assign _hover = 'typography_' | append: id | append: '_hover'
    -%}

    {%- liquid
      assign font_family = settings[_font_family]
      assign size_weight_height = settings[_size_weight_height] | strip_newlines | replace: ' ', "" | split: '|'
      assign spacing_transform_style = settings[_spacing_transform_style] | strip_newlines | replace: ' ', "" | split: '|'
      assign padding = settings[_padding] | strip_newlines | replace: ' ', "" | split: '|'
      assign border = settings[_border] | strip_newlines | replace: ' ', "" | split: '|'
      assign hover = settings[_hover] | strip_newlines | replace: ' ', "" | split: '|'

      assign sizes = size_weight_height[0] | split: '/'
      assign weight = size_weight_height[1] | split: '/'
      assign height = size_weight_height[2] | split: '/'
      assign opacity = size_weight_height[3] | split: '/'

      assign spacing = spacing_transform_style[0] | split: '/'
      assign transform = spacing_transform_style[1] | split: '/'
      assign style = spacing_transform_style[2] | split: '/'
      assign whitespace = spacing_transform_style[3] | split: '/'

      assign px = padding[0] | split: '/'
      assign py = padding[1] | split: '/'

      assign border_width = border[0] | split: '/'
      assign border_radius = border[1] | split: '/'
      assign shadow = border[2] | split: '/'

      assign shadow_lg = shadow | first | trim
      assign shadow_sm = shadow | last | trim

      assign fallback_families = 'sans-serif'

      if font_family == 'sans-serif' or font_family == 'inherit'
        assign font_family = settings.font_family_1.family
      endif

      for i in (1..5)
        assign _font_family = 'font_family_' | append: i
        if font_family == settings[_font_family].family
          assign fallback_families = settings[_font_family].fallback_families
          break
        endif
      endfor

      case shadow_lg
        when "1"
          assign shadow_lg = "0 1px 2px 0 rgb(var(--color-button-shadow) / 0.05)"
        when "2"
          assign shadow_lg = "0 4px 6px 1px rgb(var(--color-button-shadow) / 0.1), 0 2px 4px 2px rgb(var(--color-button-shadow) / 0.1)"
        when "3"
          assign shadow_lg = "0 10px 15px 3px rgb(var(--color-button-shadow) / 0.1), 0 4px 6px 4px rgb(var(--color-button-shadow) / 0.1)"
        when "4"
          assign shadow_lg = "0 20px 25px 5px rgb(var(--color-button-shadow) / 0.1), 0 8px 10px 6px rgb(var(--color-button-shadow) / 0.1)"
        when "5"
          assign shadow_lg = "0 25px 50px 12px rgb(var(--color-button-shadow) / 0.25)"
        else
          assign shadow_lg = " none"
      endcase

      case shadow_sm
        when "1"
          assign shadow_sm = "0 1px 2px 0 rgb(var(--color-button-shadow) / 0.05)"
        when "2"
          assign shadow_sm = "0 4px 6px 1px rgb(var(--color-button-shadow) / 0.1), 0 2px 4px 2px rgb(var(--color-button-shadow) / 0.1)"
        when "3"
          assign shadow_sm = "0 10px 15px 3px rgb(var(--color-button-shadow) / 0.1), 0 4px 6px 4px rgb(var(--color-button-shadow) / 0.1)"
        when "4"
          assign shadow_sm = "0 20px 25px 5px rgb(var(--color-button-shadow) / 0.1), 0 8px 10px 6px rgb(var(--color-button-shadow) / 0.1)"
        when "5"
          assign shadow_sm = "0 25px 50px 12px rgb(var(--color-button-shadow) / 0.25)"
        else
          assign shadow_sm = " none"
      endcase

    -%}

    .{{- selector -}} {
    transition: all 150ms;
    transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    display: inline-flex;
    height: min-content;
    align-self: center;
    justify-self: center;
    font-family: var(--font-{{- selector -}}-family, inherit);
    font-size: var(--font-{{- selector -}}-size-sm);
    font-weight: var(--font-{{- selector -}}-weight-sm);
    line-height: var(--font-{{- selector -}}-height-sm);
    letter-spacing: var(--font-{{- selector -}}-spacing-sm);
    text-transform: var(--font-{{- selector -}}-transform-sm);
    font-style: var(--font-{{- selector -}}-style-sm);
    white-space:var(--font-{{- selector -}}-white-space-sm);
    opacity: var(--font-{{- selector -}}-opacity-sm);
    padding: var(--font-{{- selector -}}-py-sm) var(--font-{{- selector -}}-px-sm);
    border-width: var(--font-{{- selector -}}-border-width-sm);
    border-radius: var(--font-{{- selector -}}-border-radius-sm);
    box-shadow: var(--font-{{- selector -}}-shadow-sm);
    }
    @media screen and (min-width: 768px) {
    .{{- selector -}} {
    font-size: var(--font-{{- selector -}}-size);
    font-weight: var(--font-{{- selector -}}-weight);
    line-height: var(--font-{{- selector -}}-height);
    letter-spacing: var(--font-{{- selector -}}-spacing);
    text-transform: var(--font-{{- selector -}}-transform);
    font-style: var(--font-{{- selector -}}-style);
    white-space:var(--font-{{- selector -}}-white-space);
    opacity: var(--font-{{- selector -}}-opacity);
    padding: var(--font-{{- selector -}}-py) var(--font-{{- selector -}}-px);
    border-width: var(--font-{{- selector -}}-border-width);
    border-radius: var(--font-{{- selector -}}-border-radius);
    box-shadow: var(--font-{{- selector -}}-shadow);
    }
    }

    :root {
    {%- if font_family contains " " -%}
      --font-{{- selector -}}-family: {{- font_family | replace: "'", '' | replace: '"', '' | prepend: "'" | append: "'" -}}, {{- fallback_families -}};
    {%- else -%}
      --font-{{- selector -}}-family: {{- font_family -}}, {{- fallback_families -}};
    {%- endif -%}
    --font-{{- selector -}}-size: {{- sizes | first -}};
    --font-{{- selector -}}-size-sm: {{- sizes | last -}};
    --font-{{- selector -}}-weight: {{- weight | first -}};
    --font-{{- selector -}}-weight-sm: {{- weight | last -}};
    --font-{{- selector -}}-height: {{- height | first -}};
    --font-{{- selector -}}-height-sm: {{- height | last -}};
    --font-{{- selector -}}-spacing: {{- spacing | first -}};
    --font-{{- selector -}}-spacing-sm: {{- spacing | last -}};
    --font-{{- selector -}}-transform: {{- transform | first -}};
    --font-{{- selector -}}-transform-sm: {{- transform | last -}};
    --font-{{- selector -}}-style: {{- style | first -}};
    --font-{{- selector -}}-style-sm: {{- style | last -}};
    --font-{{- selector -}}-white-space: {{- whitespace | first -}};
    --font-{{- selector -}}-white-space-sm: {{- whitespace | last -}};
    --font-{{- selector -}}-opacity: {{- opacity | first -}};
    --font-{{- selector -}}-opacity-sm: {{- opacity | last -}};
    --font-{{- selector -}}-py: {{- py | first -}};
    --font-{{- selector -}}-py-sm: {{- py | last -}};
    --font-{{- selector -}}-px: {{- px | first -}};
    --font-{{- selector -}}-px-sm: {{- px | last -}};
    --font-{{- selector -}}-border-width: {{- border_width | first -}};
    --font-{{- selector -}}-border-width-sm: {{- border_width | last -}};
    --font-{{- selector -}}-border-radius: {{- border_radius | first -}};
    --font-{{- selector -}}-border-radius-sm: {{- border_radius | last -}};
    --font-{{- selector -}}-shadow: {{- shadow_lg -}};
    --font-{{- selector -}}-shadow-sm: {{- shadow_sm -}};
    }
  {%- endcapture -%}
  {%- if no_style -%}
    {{- styles | strip_newlines -}}
  {%- else -%}
    <style>{{- styles | strip_newlines -}}</style>
  {%- endif -%}
{%- endif -%}
